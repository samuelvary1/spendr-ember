{"version":3,"sources":["vendor/ember-cli/app-prefix.js","dummy/app.js","dummy/components/highlight-code.js","dummy/components/link-li.js","dummy/components/select-2.js","dummy/controllers/application.js","dummy/controllers/examples.js","dummy/ember-select-2/tests/modules/ember-select-2/components/select-2.jshint.js","dummy/initializers/app-version.js","dummy/initializers/export-application-global.js","dummy/router.js","dummy/templates/application.js","dummy/templates/components/highlight-code.js","dummy/templates/docs.js","dummy/templates/examples.js","dummy/templates/index.js","dummy/tests/app.jshint.js","dummy/tests/components/highlight-code.jshint.js","dummy/tests/components/link-li.jshint.js","dummy/tests/controllers/application.jshint.js","dummy/tests/controllers/examples.jshint.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/resolver.jshint.js","dummy/tests/helpers/start-app.js","dummy/tests/helpers/start-app.jshint.js","dummy/tests/router.jshint.js","dummy/tests/test-helper.js","dummy/tests/test-helper.jshint.js","dummy/tests/unit/components/select-2-customize-test.js","dummy/tests/unit/components/select-2-customize-test.jshint.js","dummy/tests/unit/components/select-2-ember-data-test.js","dummy/tests/unit/components/select-2-ember-data-test.jshint.js","dummy/tests/unit/components/select-2-enabled-option-test.js","dummy/tests/unit/components/select-2-enabled-option-test.jshint.js","dummy/tests/unit/components/select-2-nested-content-test.js","dummy/tests/unit/components/select-2-nested-content-test.jshint.js","dummy/tests/unit/components/select-2-test.js","dummy/tests/unit/components/select-2-test.jshint.js","dummy/tests/unit/components/select-2-typeahead-test.js","dummy/tests/unit/components/select-2-typeahead-test.jshint.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('dummy/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'dummy/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  var App;\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('dummy/components/highlight-code', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var HighlightCodeComponent = Ember['default'].Component.extend({\n    tagName: \"pre\",\n\n    languageClass: Ember['default'].computed(\"lang\", function () {\n      return \"language-\" + this.get(\"lang\");\n    }),\n\n    didInsertElement: function didInsertElement() {\n      window.hljs.highlightBlock(this.$().get(0));\n    }\n  });\n\n  exports['default'] = HighlightCodeComponent;\n\n});","define('dummy/components/link-li', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var LinkLiComponent = Ember['default'].Component.extend({\n    tagName: 'li',\n    classNameBindings: ['active'],\n\n    active: Ember['default'].computed('childViews.@each.active', function () {\n      return this.get('childViews').anyBy('active');\n    })\n  });\n\n  exports['default'] = LinkLiComponent;\n\n});","define('dummy/components/select-2', ['exports', 'ember-select-2/components/select-2'], function (exports, Select2Component) {\n\n\t'use strict';\n\n\t/*\n\t\tThis is just a proxy file requiring the component from the /addon folder and\n\t\tmaking it available to the dummy application!\n\t */\n\texports['default'] = Select2Component['default'];\n\n});","define('dummy/controllers/application', ['exports', 'ember', 'dummy/config/environment'], function (exports, Ember, config) {\n\n\t'use strict';\n\n\tvar ApplicationController = Ember['default'].Controller.extend({\n\t\tversion: config['default'].version\n\t});\n\n\texports['default'] = ApplicationController;\n\n});","define('dummy/controllers/examples', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var ExamplesController = Ember['default'].Controller.extend({\n    favouritePizza: null,\n    favouritePizzaId: Ember['default'].computed.oneWay(\"ham\"),\n    favouritePizzas: null,\n    favouritePizzaIds: null,\n    preselectedPizzaIds: [\"ham\", \"pep\", \"tex\"],\n    chosenIngredients: null,\n    chosenTypeaheadPizza: null,\n    enabled: true,\n\n    pizzas: Ember['default'].A([{\n      id: \"mar\",\n      text: \"Margherita\",\n      description: \"The original italian one\"\n    }, {\n      id: \"pep\",\n      text: \"Peperoni\",\n      description: \"For the Peperoni lovers\"\n    }, {\n      id: \"ham\",\n      text: \"Ham\",\n      description: \"Another well known classic\"\n    }, {\n      id: \"haw\",\n      text: \"Hawaii\",\n      description: \"For the exotic ones\"\n    }]),\n\n    morePizzas: [{\n      id: \"cal\",\n      text: \"Calzone\",\n      description: \"Anyone know what that is?\"\n    }, {\n      id: \"bbq\",\n      text: \"Barbecue\",\n      description: \"Just lovely!\"\n    }],\n\n    evenMorePizzas: [{\n      id: \"tex\",\n      text: \"Texas\",\n      description: \"Like Barbecue but with bullets\"\n    }, {\n      id: \"for\",\n      text: \"Quattro Formaggi\",\n      description: \"Cheese overload\"\n    }],\n\n    disabledPizzas: Ember['default'].A([{\n      id: \"1\",\n      text: \"Margherita\",\n      description: \"The original italian one\"\n    }, {\n      id: \"2\",\n      text: \"Cheese\",\n      disabled: true,\n      description: \"Can you say Laaame?\"\n    }]),\n\n    ingredients: [{\n      text: \"Vegetables\",\n      children: [{\n        id: \"tom\",\n        text: \"Tomatoes\"\n      }, {\n        id: \"pin\",\n        text: \"Pineapples\"\n      }]\n    }, {\n      text: \"Meat\",\n      children: [{\n        id: \"sal\",\n        text: \"Salami\"\n      }, {\n        id: \"ham\",\n        text: \"Ham\"\n      }, {\n        id: \"bac\",\n        text: \"Bacon\"\n      }]\n    }],\n\n    actions: {\n      selectPizza: function selectPizza(item) {\n        this.set(\"favouritePizza\", item);\n      },\n\n      loadPizzas: function loadPizzas() {\n        this.pizzas.pushObjects(this.morePizzas);\n        this.morePizzas = [];\n      },\n\n      loadMorePizzas: function loadMorePizzas() {\n        this.pizzas.pushObjects(this.evenMorePizzas);\n        this.evenMorePizzas = [];\n      },\n\n      toggleEnabled: function toggleEnabled() {\n        this.toggleProperty(\"enabled\");\n      },\n\n      queryPizzas: function queryPizzas(query, deferred, isInfiniteScroll) {\n        setTimeout(function () {\n          var data = [];\n          switch (query.term) {\n            case \"error\":\n              deferred.reject(\"sample error\");\n              break;\n            case \"empty\":\n              deferred.resolve(data);\n              break;\n            default:\n              for (var i = 0; i < 10; i++) {\n                data.push({\n                  id: query.term + \"_\" + i,\n                  text: \"Pizza \" + query.term + \" \" + i\n                });\n              }\n              if (isInfiniteScroll) {\n                deferred.resolve({ data: data, more: true });\n              } else {\n                deferred.resolve(data);\n              }\n              break;\n          }\n        }, 300);\n      },\n\n      queryInfiniteScrollPizzas: function queryInfiniteScrollPizzas(query, deferred) {\n        this.send(\"queryPizzas\", query, deferred, true);\n      }\n    } });\n\n  exports['default'] = ExamplesController;\n\n});","define('dummy/ember-select-2/tests/modules/ember-select-2/components/select-2.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - modules/ember-select-2/components');\n  test('modules/ember-select-2/components/select-2.js should pass jshint', function () {\n    ok(true, 'modules/ember-select-2/components/select-2.js should pass jshint.');\n  });\n\n});","define('dummy/initializers/app-version', ['exports', 'dummy/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n  var registered = false;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: function initialize(container, application) {\n      if (!registered) {\n        var appName = classify(application.toString());\n        Ember['default'].libraries.register(appName, config['default'].APP.version);\n        registered = true;\n      }\n    }\n  };\n\n});","define('dummy/initializers/export-application-global', ['exports', 'ember', 'dummy/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('dummy/router', ['exports', 'ember', 'dummy/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {\n    this.route('examples');\n    this.route('docs');\n  });\n\n  exports['default'] = Router;\n\n});","define('dummy/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"Home\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \t\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          block(env, morph0, context, \"link-to\", [\"index\"], {}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"Examples\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"          \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          block(env, morph0, context, \"link-to\", [\"examples\"], {}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"Docs\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"          \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          block(env, morph0, context, \"link-to\", [\"docs\"], {}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"navbar navbar-default navbar-fixed-top\");\n        dom.setAttribute(el1,\"role\",\"navigation\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"container\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"navbar-header\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"button\");\n        dom.setAttribute(el4,\"type\",\"button\");\n        dom.setAttribute(el4,\"class\",\"navbar-toggle\");\n        dom.setAttribute(el4,\"data-toggle\",\"collapse\");\n        dom.setAttribute(el4,\"data-target\",\".navbar-collapse\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"span\");\n        dom.setAttribute(el5,\"class\",\"sr-only\");\n        var el6 = dom.createTextNode(\"Toggle navigation\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"span\");\n        dom.setAttribute(el5,\"class\",\"icon-bar\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"span\");\n        dom.setAttribute(el5,\"class\",\"icon-bar\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"span\");\n        dom.setAttribute(el5,\"class\",\"icon-bar\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"a\");\n        dom.setAttribute(el4,\"class\",\"navbar-brand\");\n        dom.setAttribute(el4,\"href\",\"#\");\n        var el5 = dom.createTextNode(\"ember-select-2 \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"span\");\n        dom.setAttribute(el5,\"class\",\"version-number\");\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"navbar-collapse collapse\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"ul\");\n        dom.setAttribute(el4,\"class\",\"nav navbar-nav\");\n        var el5 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"ul\");\n        dom.setAttribute(el4,\"class\",\"nav navbar-nav navbar-right\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"li\");\n        var el6 = dom.createElement(\"a\");\n        dom.setAttribute(el6,\"href\",\"https://github.com/istefo/ember-select-2\");\n        var el7 = dom.createTextNode(\"Fork on Github.com\");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"/.nav-collapse \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"container\");\n        var el2 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0, 1]);\n        var element1 = dom.childAt(element0, [3, 1]);\n        var morph0 = dom.createMorphAt(dom.childAt(element0, [1, 3, 1]),0,0);\n        var morph1 = dom.createMorphAt(element1,1,1);\n        var morph2 = dom.createMorphAt(element1,2,2);\n        var morph3 = dom.createMorphAt(element1,3,3);\n        var morph4 = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);\n        content(env, morph0, context, \"version\");\n        block(env, morph1, context, \"link-li\", [], {}, child0, null);\n        block(env, morph2, context, \"link-li\", [], {}, child1, null);\n        block(env, morph3, context, \"link-li\", [], {}, child2, null);\n        content(env, morph4, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('dummy/templates/components/highlight-code', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"code\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, element = hooks.element, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(element0,0,0);\n        element(env, element0, context, \"bind-attr\", [], {\"class\": get(env, context, \"languageClass\")});\n        content(env, morph0, context, \"yield\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('dummy/templates/docs', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"var app = new EmberAddon({\\n  select2: {\\n    includeAssets: false\\n  }\\n});\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h4\");\n        var el2 = dom.createTextNode(\"Terminology\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"To avoid confusion when reading the documentation, there is a short overview\\nof the term used.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"dl\");\n        dom.setAttribute(el1,\"class\",\"dl-horizontal\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"dt\");\n        var el3 = dom.createTextNode(\"Content\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"dd\");\n        var el3 = dom.createTextNode(\"Array of elements that have to be supplied and will be displayed in the dropdown list\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"dt\");\n        var el3 = dom.createTextNode(\"Selection\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"dd\");\n        var el3 = dom.createTextNode(\"Subset of Content containing the elements that were selected by the user\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Content\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h4\");\n        var el2 = dom.createTextNode(\"Flat Content\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"The component's \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"content\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" property has to be set or bound to an Array (or subclass of Ember.Enumerable).\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"br\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"Its elements are expected to have a specific set of properties each:\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"dl\");\n        dom.setAttribute(el1,\"class\",\"dl-horizontal\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"dt\");\n        var el3 = dom.createTextNode(\"id\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"dd\");\n        var el3 = dom.createTextNode(\"Mixed\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"br\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"Used to internally identify an object and should be unique when coerced to a String\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"dt\");\n        var el3 = dom.createTextNode(\"text\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"dd\");\n        var el3 = dom.createTextNode(\"String | SafeString\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"br\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"Can be a computed property. Text to be displayed in the dropdown menu. Escapes html entities by default except when already a Handlebars.SafeString.\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"dt\");\n        var el3 = dom.createTextNode(\"description\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"dd\");\n        var el3 = dom.createTextNode(\"String | SafeString\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"br\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"Can be a computed property. Additional text to be displayed in the dropdown menu, visually less important. Will be omitted in the non-expanded view. Escapes html entities by default except when already a Handlebars.SafeString.\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"dt\");\n        var el3 = dom.createTextNode(\"locked\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"dd\");\n        var el3 = dom.createTextNode(\"Boolean\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"br\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"Can be set to indicate that this item can not be removed from the selection once selected. \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"b\");\n        var el4 = dom.createTextNode(\"Note:\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" make sure to add the object to the \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"code\");\n        var el4 = dom.createTextNode(\"value\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" when setting this to true.\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Additionally, content objects may contain any other properties, functions etc., they will be preserved in full object binding mode.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h4\");\n        var el2 = dom.createTextNode(\"Nested Content\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Simulating the \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"select > optgroup\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" behaviour, it is possible to supply a nested datasource containing category headers.\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"br\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"For first level items in \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"content\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\":\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"dl\");\n        dom.setAttribute(el1,\"class\",\"dl-horizontal\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"dt\");\n        var el3 = dom.createTextNode(\"id\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"dd\");\n        var el3 = dom.createTextNode(\"Not necessary, header elements cannot be selected\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"dt\");\n        var el3 = dom.createTextNode(\"children\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"dd\");\n        var el3 = dom.createTextNode(\"Array\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"br\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"Containing elements that conform to the \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"i\");\n        var el4 = dom.createTextNode(\"Flat Content\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" specification\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"dt\");\n        var el3 = dom.createTextNode(\"description\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"dd\");\n        var el3 = dom.createTextNode(\"Not displayed, instead, the text will be printed in bold.\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Selection\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Selecting an option from the dropdown will update the component's \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"value\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" binding.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h4\");\n        var el2 = dom.createTextNode(\"Full Object Binding\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Full Object Binding is the default way of binding the component's selection and will be used, when \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"optionValuePath\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" is not set. It ensures strict equality between the object selected and the object from the provided content.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Also, setting the external end of the binding will update the displayed selection of the component.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h4\");\n        var el2 = dom.createTextNode(\"Value Binding\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"There are situations where it's more convenient to only bind one property of the whole content objects. This can be accieved by setting the \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"optionValuePath\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\", this path will then be used to \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"Ember.get()\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" the desired value which then is the selected value.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"This path will also be used to collect the complete objects when syncing the component with the external value, so it better be unique.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"In value binding mode, there is a special feature important when lazy-loading data:\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"br\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"Imagine there is already a selection \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"value\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\", but the \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"content\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" array does not yet contain all selected elements. As long as the selection can not be fullfilled, user interaction on the component is disabled in order to prevent the user from accidentally destroying the selection.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"\\n  For multiple selection mode with \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"optionValuePath\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" set, the value string is by default split at commas.\\n  If you want to change this, you can set the \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"valueSeparator\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" to any character that does not appear within your item ids. Value string splitting will only be done in the configuration stated above.\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Styling\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"select-2 does not interfere with the default styling of the Select2 Component and depends on the original stylesheet. It adds support for \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2,\"href\",\"http://fk.github.io/select2-bootstrap-css/master.html\");\n        var el3 = dom.createTextNode(\"Twitter Bootstrap styling\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" by adding the class \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\".form-control\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" when the corresponding stylesheets are loaded.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"It is possible to exclude the select2 assets from ember-cli by setting the \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"includeAssets\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" option to \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"false\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" in your \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"Brocfile.js\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\". This will skip loading select2.css, select2.png, select2x2.png and select2-spinner.gif.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,48,48,contextualElement);\n        block(env, morph0, context, \"highlight-code\", [], {\"lang\": \".js\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('dummy/templates/examples', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"{{select-2\\n    content=pizzas\\n    value=favouritePizza\\n    placeholder=\\\"Choose your pizza\\\"\\n    allowClear=true\\n}}\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"{{select-2\\n    content=pizzas\\n    value=favouritePizza\\n    optionValuePath=\\\"id\\\"\\n    placeholder=\\\"Choose your Pizza\\\"\\n}}\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"{{select-2\\n    content=pizzas\\n    value=favouritePizza\\n    multiple=true\\n    placeholder=\\\"Choose some Pizzas\\\"\\n}}\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child3 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"{{select-2\\n    content=pizzas\\n    value=favouritePizza\\n    multiple=true\\n    optionValuePath=\\\"id\\\"\\n    placeholder=\\\"Choose some Pizzas\\\"\\n}}\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child4 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" \");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement, blockArguments) {\n          var dom = env.dom;\n          var hooks = env.hooks, set = hooks.set, get = hooks.get, element = hooks.element, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [0]);\n          var morph0 = dom.createMorphAt(element0,0,0);\n          set(env, context, \"pizza\", blockArguments[0]);\n          element(env, element0, context, \"action\", [\"selectPizza\", get(env, context, \"pizza\")], {});\n          content(env, morph0, context, \"pizza.text\");\n          return fragment;\n        }\n      };\n    }());\n    var child5 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" \");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement, blockArguments) {\n          var dom = env.dom;\n          var hooks = env.hooks, set = hooks.set, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, 0);\n          set(env, context, \"pizza\", blockArguments[0]);\n          content(env, morph0, context, \"pizza.id\");\n          return fragment;\n        }\n      };\n    }());\n    var child6 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"{{select-2\\n    content=pizzas\\n    optionLabelPath=\\\"id\\\"\\n    optionDescriptionPath=\\\"text\\\"\\n    placeholder=\\\"Choose some Pizzas\\\"\\n}}\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child7 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"{{select-2\\n    content=pizzas\\n    placeholder=\\\"Choose some Pizzas\\\"\\n    cssClass=\\\"custom-class\\\"\\n}}\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child8 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"{{select-2\\n    placeholder=\\\"Choose from our many pizzas\\\"\\n    value=chosenTypeaheadPizza\\n    typeaheadSearchingText=\\\"Searching pizzas\\\"\\n    typeaheadNoMatchesText=\\\"No pizzas found for '%@'\\\"\\n    typeaheadErrorText=\\\"Loading failed: %@\\\"\\n    minimumInputLength=3\\n    maximumInputLength=10\\n    query=\\\"queryPizzas\\\"\\n}}\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child9 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Ember.Controller.extend({\\n  actions: {\\n    queryPizzas: function(query, deferred) {\\n      this.store.find('myModel', { name: query.term })\\n        .then(deferred.resolve, deferred.reject);\\n    }\\n  }\\n});\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child10 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"{{select-2\\n    placeholder=\\\"Choose from our many pizzas\\\"\\n    value=chosenTypeaheadPizza\\n    typeaheadSearchingText=\\\"Searching pizzas\\\"\\n    typeaheadNoMatchesText=\\\"No pizzas found for '%@'\\\"\\n    typeaheadErrorText=\\\"Loading failed: %@\\\"\\n    minimumInputLength=3\\n    maximumInputLength=10\\n    query=\\\"queryPizzas\\\"\\n}}\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child11 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Ember.Controller.extend({\\n  actions: {\\n    queryPizzas: function(query, deferred) {\\n      this.store.find('myModel', { name: query.term })\\n        .then(function(data) {\\n          //'when everything has been loaded, specify more: false'\\n          deferred.resolve({data: data, more: true});\\n        }, deferred.reject);\\n    }\\n  }\\n});\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child12 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"[\\n  {\\n    text: \\\"Vegetables\\\",\\n    children: [\\n      {\\n        id: \\\"tom\\\",\\n        text: \\\"Tomatoes\\\"\\n      }, {\\n        id: \\\"pin\\\",\\n        text: \\\"Pineapples\\\"\\n      }\\n    ]\\n  }, { ... }\\n]\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child13 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"[\\n    {\\n       id: \\\"1\\\",\\n       text: \\\"Margherita\\\",\\n       description: \\\"The original italian one\\\"\\n     }, {\\n       id: \\\"2\\\",\\n       text: \\\"Cheese\\\",\\n       disabled: true,\\n       description: \\\"Can you say Laaame?\\\"\\n     }\\n  ]\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child14 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"{{select-2\\n    content=pizzas\\n    enabled=enabled\\n    placeholder=\\\"Choose some Pizzas\\\"\\n}}\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child15 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"{{select-2\\n    content=pizzas\\n    searchEnabled=false\\n    placeholder=\\\"Choose some Pizzas\\\"\\n}}\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Single-Selection Dropdown\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"This mode works mostly like the default \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"{{select}}\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" component which comes with ember.js right away. However, notice the nice styling and search field making it easy to find the right option.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-6\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"Selection with Full Object Binding\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"You may choose your favourite pizza now! It will be remembered as \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"favouritePizza\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" on the controller.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"example-box\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"Your Pizza:\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"br\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"b\");\n        var el6 = dom.createTextNode(\"Id\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\": \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"br\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"b\");\n        var el6 = dom.createTextNode(\"Name\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\": \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"br\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"b\");\n        var el6 = dom.createTextNode(\"Description\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\": \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"Full Object Binding ensures strict equality between the selected object and the object from the \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"content\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" array.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"You can specify the \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"placeholder\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" option to display a placeholder.  By specifying the \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"allowClear\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    option, you determine whether or not a clear button is displayed when the select box has a selection.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-6\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"Selection with Value Binding\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"Again, choose your pizza. This time though, only the ID will be set to the value binding.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"example-box\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"Your Pizza Id: \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"Using the \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"optionValuePath\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" option, you can set the select-2 component into \\\"value mode\\\".\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"You can specify any path that can be resolved for the input object (\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"\\\"id\\\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" is just a simple example) and its data type will be preserved.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Multiple-Selection Dropdown\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Multiple Selections behave like tag inputs and provide a high level of comfort for selecting elements.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-6\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"Multiple Selection w/ Full Object Binding\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"In case you are really hungry or order pizza for you and your friends (yeah, sure...), you can choose multiple objects which will be stored in the \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"favouritePizzas\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" Array.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"example-box\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"Your Pizzas are: \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"As you can see, the full objects are stored on the controller.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-6\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"Multiple Selection w/ Value Binding\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"Maybe you only need the pizza Ids. Specify a path in \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"optionValuePath\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" and you're good to go.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"example-box\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"Your Pizza Ids: \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Changing the Selection Value\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Since Ember has nice two-way data bindings, you can of course change the selected element from outside the select-2 input and it will update accordingly. These examples work with single and multiple selection, but only single selection is shown here for siplicity.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-6\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"Full Object Binding\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"Same example as above, but now you can manually set the selected Element from outside the input.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"example-box example-box-full\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"Set Selection to: \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-6\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"Value Binding\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"Naturally, this works as well for the Value Binding method. Try values like \\\"pep\\\", \\\"mar\\\" or \\\"haw\\\"!\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"example-box example-box-full\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"br\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"You will notice, that the dropdown gets locked when the entered ID does not match any of the objects available. This is a feature intended to prevent the destruction of the currently selected value when the options are yet to be loaded. (See the next example)\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Changing the Dropdown Content\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"The way Ember handles data is often asynchronous and the select-2 component can respond to changes in its \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"content\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" Array.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"The following example will simulate lazy-loaded objects that were preselected using the \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"value\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" Binding but not available until the new data is loaded. Because the objects were selected but not available for display, the select-2 input is disabled so one can't change the selection without first knowing what data actually is selected!\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-6\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"Full Object Binding\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"Changing the dropdown's content simply works as expected.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"example-box example-box-full\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createElement(\"button\");\n        dom.setAttribute(el5,\"class\",\"btn btn-default\");\n        var el6 = dom.createTextNode(\"Load more Pizzas\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-6\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"Value Binding\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"As you can see below, there is an Array of selected pizzas which contains keys that are not yet loaded into the main pizza Array. As soon as you load more pizzas, the input will become editable.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"example-box example-box-full\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"Available: \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"br\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"Selected: \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createElement(\"button\");\n        dom.setAttribute(el5,\"class\",\"btn btn-default\");\n        var el6 = dom.createTextNode(\"Load even more Pizzas\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Customizing\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-6\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"Change Label Value Path\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"While by default the items' \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"text\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" attribute is used for the text displayed, it can be customized by setting the components \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"optionLabelPath\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\". Additionally, if you want to use a different label path for selected elements (visible when the dropdown is not expanded), you can set \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"optionLabelSelectedPath\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\".\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"The \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"optionDescriptionPath\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" can be changed to something different from the default (\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"description\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"), and the \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"optionHeadlinePath\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" may be changed from \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"text\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" to a different path for displaying group headers.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"example-box\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-6\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"Add Custom CSS Class\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"When one select2 components needs special styles, set the \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"cssClass\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" binding to a string containing a single css class. It will be assigned to the \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\".select2-container\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\", which is the input in closed state, as well as to the \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\".select2-drop\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\", which is the dropdown menu.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createElement(\"b\");\n        var el5 = dom.createTextNode(\"Warning:\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" Don't get to fancy! These classes will not update when the binding updates, they have to be computable at the point of time the component is inserted.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"example-box\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Typeahead & Ajax Queries\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Imagine you sell so many pizzas that you don't want to send all of them to the client. Instead, there is a protocol that lets the nearest controller figure out which options to show for a given search term, asynchronously.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Typeahead is currently only possible for Full Object Binding, because when using an \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"optionValuePath\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\", there is no API to retrieve the full object from the controller.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-6\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"The Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"example-box\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"Specify the name of your controller's callback in the \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"code\");\n        var el6 = dom.createTextNode(\"query\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\" option.\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"You can use single or multiple selection. Customizing the displayed messages (with placeholder for search term and error) as seen below is optional.\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"Type in \\\"empty\\\" to see the result for an empty query or \\\"error\\\" for a rejected query.\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-6\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"The Controller\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"example-box\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"The action specified in the component will be called every time the query changes.\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"Make sure to not call \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"code\");\n        var el6 = dom.createTextNode(\"query.callback\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\" directly but always use the provided deferred!\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Infinite Scroll with Typeahead & Ajax Queries\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Imagine you sell so many pizzas that you don't want to send all of them to the client, and using Typeahead doesn't give you a large enough filter. You can implement infinite scroll using the \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"more\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" property\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-6\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"The Component\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"example-box\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"The component is exactly the same as the regular Typeahead and Ajax query from above\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-6\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"The Controller\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"example-box\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"There are a few minor changes from the regular Typeahead and Ajax query from above.\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"Instead of sending in deferred.resolve as the callback, you need to implement your own callback and call deferred.resolve with the data that was returned and more property\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"Implement \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"code\");\n        var el6 = dom.createTextNode(\"more: true\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\" when there is still more data to load, and \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"code\");\n        var el6 = dom.createTextNode(\"more: false\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\" when the server has responded with all the data and there is nothing to load.\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Miscellaneous\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-6\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"Hierarchical JSON\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"select-2 works out of the box when given hierarchical JSON as input. Notice the \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"children\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" attribute.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"example-box\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-6\");\n        var el3 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"Disabled Individual Options\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"Setting an attribute of \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"disabled\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" to \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"true\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" will disable the option from being selected\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"example-box\");\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-6\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"Enabling/Disabling\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"By binding the component's \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"enabled\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" value, supply a truthy value to enable or a falsy value to disable the input.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"example-box\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createElement(\"button\");\n        dom.setAttribute(el5,\"class\",\"btn btn-default\");\n        var el6 = dom.createTextNode(\"Toggle enabled\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\" Enabled: \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-6\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"Disabling the Search Field\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"For small option lists, you may want to disable the search to save screen estate and make the component easier to use on mobile devices. Set \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"searchEnabled\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" to \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"false\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" to disable search. \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"b\");\n        var el5 = dom.createTextNode(\"This works in single selection mode only!\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"You can, in fact, use any binding (e.g. the \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"code\");\n        var el5 = dom.createTextNode(\"Ember.computed.lt\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" computed property), but the value has to be computed on initial rendering.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"example-box\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, inline = hooks.inline, block = hooks.block, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element1 = dom.childAt(fragment, [4]);\n        var element2 = dom.childAt(element1, [1]);\n        var element3 = dom.childAt(element2, [5]);\n        var element4 = dom.childAt(element3, [1]);\n        var element5 = dom.childAt(element1, [3]);\n        var element6 = dom.childAt(element5, [5]);\n        var element7 = dom.childAt(fragment, [12]);\n        var element8 = dom.childAt(element7, [1]);\n        var element9 = dom.childAt(element8, [5]);\n        var element10 = dom.childAt(element7, [3]);\n        var element11 = dom.childAt(element10, [5]);\n        var element12 = dom.childAt(fragment, [20]);\n        var element13 = dom.childAt(element12, [1, 5]);\n        var element14 = dom.childAt(element12, [3, 5]);\n        var element15 = dom.childAt(fragment, [30]);\n        var element16 = dom.childAt(element15, [1, 5]);\n        var element17 = dom.childAt(element16, [1, 0]);\n        var element18 = dom.childAt(element15, [3, 5]);\n        var element19 = dom.childAt(element18, [1]);\n        var element20 = dom.childAt(element18, [3, 0]);\n        var element21 = dom.childAt(fragment, [36]);\n        var element22 = dom.childAt(element21, [1]);\n        var element23 = dom.childAt(element21, [3]);\n        var element24 = dom.childAt(fragment, [46]);\n        var element25 = dom.childAt(element24, [1]);\n        var element26 = dom.childAt(fragment, [52]);\n        var element27 = dom.childAt(element26, [1]);\n        var element28 = dom.childAt(fragment, [56]);\n        var element29 = dom.childAt(element28, [1]);\n        var element30 = dom.childAt(element28, [3]);\n        var element31 = dom.childAt(fragment, [58]);\n        var element32 = dom.childAt(element31, [1]);\n        var element33 = dom.childAt(element32, [5]);\n        var element34 = dom.childAt(element33, [1]);\n        var element35 = dom.childAt(element34, [0]);\n        var element36 = dom.childAt(element31, [3]);\n        var morph0 = dom.createMorphAt(element4,4,4);\n        var morph1 = dom.createMorphAt(element4,8,8);\n        var morph2 = dom.createMorphAt(element4,12,12);\n        var morph3 = dom.createMorphAt(element3,3,3);\n        var morph4 = dom.createMorphAt(element2,7,7);\n        var morph5 = dom.createMorphAt(dom.childAt(element6, [1]),1,1);\n        var morph6 = dom.createMorphAt(element6,3,3);\n        var morph7 = dom.createMorphAt(element5,7,7);\n        var morph8 = dom.createMorphAt(dom.childAt(element9, [1]),1,1);\n        var morph9 = dom.createMorphAt(element9,3,3);\n        var morph10 = dom.createMorphAt(element8,7,7);\n        var morph11 = dom.createMorphAt(dom.childAt(element11, [1]),1,1);\n        var morph12 = dom.createMorphAt(element11,3,3);\n        var morph13 = dom.createMorphAt(element10,7,7);\n        var morph14 = dom.createMorphAt(dom.childAt(element13, [1]),1,1);\n        var morph15 = dom.createMorphAt(element13,3,3);\n        var morph16 = dom.createMorphAt(element14,1,1);\n        var morph17 = dom.createMorphAt(element14,4,4);\n        var morph18 = dom.createMorphAt(element16,3,3);\n        var morph19 = dom.createMorphAt(element19,1,1);\n        var morph20 = dom.createMorphAt(element19,4,4);\n        var morph21 = dom.createMorphAt(element18,5,5);\n        var morph22 = dom.createMorphAt(dom.childAt(element22, [7]),1,1);\n        var morph23 = dom.createMorphAt(element22,9,9);\n        var morph24 = dom.createMorphAt(dom.childAt(element23, [7]),1,1);\n        var morph25 = dom.createMorphAt(element23,9,9);\n        var morph26 = dom.createMorphAt(dom.childAt(element25, [3]),7,7);\n        var morph27 = dom.createMorphAt(element25,5,5);\n        var morph28 = dom.createMorphAt(dom.childAt(element24, [3]),5,5);\n        var morph29 = dom.createMorphAt(dom.childAt(element27, [3]),3,3);\n        var morph30 = dom.createMorphAt(element27,5,5);\n        var morph31 = dom.createMorphAt(dom.childAt(element26, [3]),5,5);\n        var morph32 = dom.createMorphAt(dom.childAt(element29, [5]),1,1);\n        var morph33 = dom.createMorphAt(element29,7,7);\n        var morph34 = dom.createMorphAt(dom.childAt(element30, [5]),1,1);\n        var morph35 = dom.createMorphAt(element30,7,7);\n        var morph36 = dom.createMorphAt(element34,2,2);\n        var morph37 = dom.createMorphAt(element33,3,3);\n        var morph38 = dom.createMorphAt(element32,7,7);\n        var morph39 = dom.createMorphAt(dom.childAt(element36, [7]),1,1);\n        var morph40 = dom.createMorphAt(element36,9,9);\n        content(env, morph0, context, \"favouritePizza.id\");\n        content(env, morph1, context, \"favouritePizza.text\");\n        content(env, morph2, context, \"favouritePizza.description\");\n        inline(env, morph3, context, \"select-2\", [], {\"content\": get(env, context, \"pizzas\"), \"value\": get(env, context, \"favouritePizza\"), \"placeholder\": \"Choose your Pizza\", \"allowClear\": true});\n        block(env, morph4, context, \"highlight-code\", [], {\"lang\": \".hbs\"}, child0, null);\n        content(env, morph5, context, \"favouritePizzaId\");\n        inline(env, morph6, context, \"select-2\", [], {\"content\": get(env, context, \"pizzas\"), \"value\": get(env, context, \"favouritePizzaId\"), \"optionValuePath\": \"id\", \"placeholder\": \"Choose your Pizza\"});\n        block(env, morph7, context, \"highlight-code\", [], {\"lang\": \".hbs\"}, child1, null);\n        content(env, morph8, context, \"favouritePizzas\");\n        inline(env, morph9, context, \"select-2\", [], {\"content\": get(env, context, \"pizzas\"), \"value\": get(env, context, \"favouritePizzas\"), \"multiple\": true, \"placeholder\": \"Choose some Pizzas\"});\n        block(env, morph10, context, \"highlight-code\", [], {\"lang\": \".hbs\"}, child2, null);\n        content(env, morph11, context, \"favouritePizzaIds\");\n        inline(env, morph12, context, \"select-2\", [], {\"content\": get(env, context, \"pizzas\"), \"value\": get(env, context, \"favouritePizzaIds\"), \"multiple\": true, \"optionValuePath\": \"id\", \"placeholder\": \"Choose some Pizzas\"});\n        block(env, morph13, context, \"highlight-code\", [], {\"lang\": \".hbs\"}, child3, null);\n        block(env, morph14, context, \"each\", [get(env, context, \"pizzas\")], {}, child4, null);\n        inline(env, morph15, context, \"select-2\", [], {\"content\": get(env, context, \"pizzas\"), \"value\": get(env, context, \"favouritePizza\"), \"placeholder\": \"Choose your Pizza\"});\n        inline(env, morph16, context, \"input\", [], {\"type\": \"text\", \"value\": get(env, context, \"favouritePizzaId\"), \"class\": \"form-control\"});\n        inline(env, morph17, context, \"select-2\", [], {\"content\": get(env, context, \"pizzas\"), \"value\": get(env, context, \"favouritePizzaId\"), \"optionValuePath\": \"id\", \"placeholder\": \"Choose your Pizza\"});\n        element(env, element17, context, \"action\", [\"loadPizzas\"], {});\n        inline(env, morph18, context, \"select-2\", [], {\"content\": get(env, context, \"pizzas\"), \"value\": get(env, context, \"favouritePizzas\"), \"multiple\": true, \"placeholder\": \"Choose some Pizzas\"});\n        block(env, morph19, context, \"each\", [get(env, context, \"pizzas\")], {}, child5, null);\n        content(env, morph20, context, \"preselectedPizzaIds\");\n        element(env, element20, context, \"action\", [\"loadMorePizzas\"], {});\n        inline(env, morph21, context, \"select-2\", [], {\"content\": get(env, context, \"pizzas\"), \"value\": get(env, context, \"preselectedPizzaIds\"), \"multiple\": true, \"optionValuePath\": \"id\", \"placeholder\": \"Choose some Pizzas\"});\n        inline(env, morph22, context, \"select-2\", [], {\"content\": get(env, context, \"pizzas\"), \"optionLabelPath\": \"id\", \"optionDescriptionPath\": \"text\", \"placeholder\": \"Choose some Pizzas\"});\n        block(env, morph23, context, \"highlight-code\", [], {\"lang\": \".hbs\"}, child6, null);\n        inline(env, morph24, context, \"select-2\", [], {\"content\": get(env, context, \"pizzas\"), \"placeholder\": \"Choose some Pizzas\", \"cssClass\": \"custom-class\"});\n        block(env, morph25, context, \"highlight-code\", [], {\"lang\": \".hbs\"}, child7, null);\n        inline(env, morph26, context, \"select-2\", [], {\"placeholder\": \"Choose from our many pizzas\", \"value\": get(env, context, \"chosenTypeaheadPizza\"), \"typeaheadSearchingText\": \"Searching pizzas\", \"typeaheadNoMatchesText\": \"No pizzas found for '%@'\", \"typeaheadErrorText\": \"Loading failed: %@\", \"minimumInputLength\": 3, \"maximumInputLength\": 10, \"query\": \"queryPizzas\"});\n        block(env, morph27, context, \"highlight-code\", [], {\"lang\": \".hbs\"}, child8, null);\n        block(env, morph28, context, \"highlight-code\", [], {\"lang\": \".js\"}, child9, null);\n        inline(env, morph29, context, \"select-2\", [], {\"placeholder\": \"Choose from our many pizzas\", \"value\": get(env, context, \"chosenTypeaheadPizza\"), \"typeaheadSearchingText\": \"Searching pizzas\", \"typeaheadNoMatchesText\": \"No pizzas found for '%@'\", \"typeaheadErrorText\": \"Loading failed: %@\", \"minimumInputLength\": 3, \"maximumInputLength\": 10, \"query\": \"queryInfiniteScrollPizzas\"});\n        block(env, morph30, context, \"highlight-code\", [], {\"lang\": \".hbs\"}, child10, null);\n        block(env, morph31, context, \"highlight-code\", [], {\"lang\": \".js\"}, child11, null);\n        inline(env, morph32, context, \"select-2\", [], {\"content\": get(env, context, \"ingredients\"), \"value\": get(env, context, \"selectedIngredients\"), \"multiple\": true, \"placeholder\": \"What would you like on your Pizza?\"});\n        block(env, morph33, context, \"highlight-code\", [], {\"lang\": \"json\"}, child12, null);\n        inline(env, morph34, context, \"select-2\", [], {\"content\": get(env, context, \"disabledPizzas\"), \"placeholder\": \"Choose some Pizzas\"});\n        block(env, morph35, context, \"highlight-code\", [], {\"lang\": \"json\"}, child13, null);\n        element(env, element35, context, \"action\", [\"toggleEnabled\"], {});\n        content(env, morph36, context, \"enabled\");\n        inline(env, morph37, context, \"select-2\", [], {\"content\": get(env, context, \"pizzas\"), \"enabled\": get(env, context, \"enabled\"), \"placeholder\": \"Choose some Pizzas\"});\n        block(env, morph38, context, \"highlight-code\", [], {\"lang\": \".hbs\"}, child14, null);\n        inline(env, morph39, context, \"select-2\", [], {\"content\": get(env, context, \"pizzas\"), \"searchEnabled\": false, \"placeholder\": \"Choose some Pizzas\"});\n        block(env, morph40, context, \"highlight-code\", [], {\"lang\": \".hbs\"}, child15, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('dummy/templates/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"View the examples »\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"jumbotron\");\n        var el2 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h1\");\n        dom.setAttribute(el2,\"id\",\"title\");\n        var el3 = dom.createTextNode(\"select2 for ember.js\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"The go-to component for rich dropdown menus that integrate nicely with Ember.js.\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"What is this?\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"This component wraps the wildly used \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2,\"href\",\"http://ivaynberg.github.io/select2/\");\n        dom.setAttribute(el2,\"target\",\"blank\");\n        var el3 = dom.createTextNode(\"Select2 jQuery Plugin\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" in an Ember.Component making it easy to use in your ember application.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"Why is it good?\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"ul\");\n        var el2 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createTextNode(\"It does not reinvent the wheel but leverages the power of the \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"a\");\n        dom.setAttribute(el3,\"href\",\"http://ivaynberg.github.io/select2/\");\n        dom.setAttribute(el3,\"target\",\"blank\");\n        var el4 = dom.createTextNode(\"Select2 jQuery Plugin\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createTextNode(\"It is a nice citizen in the Ember.js Town, supporting value bindings on \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"code\");\n        var el4 = dom.createTextNode(\"content\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" and \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"code\");\n        var el4 = dom.createTextNode(\"value\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" properties\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createTextNode(\"It supports computed \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"code\");\n        var el4 = dom.createTextNode(\"text\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" and \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"code\");\n        var el4 = dom.createTextNode(\"description\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" properties on its option elements\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createTextNode(\"It prevents XSS attacks in case the options contain user-supplied values, but enables html content when fed \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"code\");\n        var el4 = dom.createTextNode(\"Handlebars.SafeString\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"s\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createTextNode(\"Source code is documented and extensively tested\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),5,5);\n        block(env, morph0, context, \"link-to\", [\"examples\"], {\"class\": \"btn btn-primary btn-lg\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('dummy/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/components/highlight-code.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/highlight-code.js should pass jshint', function() { \n    ok(true, 'components/highlight-code.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/components/link-li.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/link-li.js should pass jshint', function() { \n    ok(true, 'components/link-li.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/controllers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/application.js should pass jshint', function() { \n    ok(true, 'controllers/application.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/controllers/examples.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/examples.js should pass jshint', function() { \n    ok(true, 'controllers/examples.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/helpers/resolver', ['exports', 'ember/resolver', 'dummy/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('dummy/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/helpers/start-app', ['exports', 'ember', 'dummy/app', 'dummy/router', 'dummy/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('dummy/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/test-helper', ['dummy/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('dummy/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/select-2-customize-test', ['ember', 'ember-qunit', 'dummy/tests/helpers/start-app'], function (Ember, ember_qunit, startApp) {\n\n  'use strict';\n\n  /*\n    Test \"customization\" options like:\n     * `optionLabelPath`\n     * `optionHeadlinePath`   \n     * `optionDescriptionPath`\n     * `searchEnabled` \n     * custom styles (future...)\n   */\n\n  var ingredients = Ember['default'].A([{\n    id: 1,\n    name: \"Tomato\",\n    subtext: \"first\"\n  }, {\n    id: 2,\n    name: \"Peperoni\",\n    subtext: \"second\"\n  }, {\n    id: 3,\n    name: \"Ham\",\n    subtext: \"third\"\n  }, {\n    id: 4,\n    name: \"Chorizo\",\n    subtext: \"fourth\"\n  }, {\n    id: 5,\n    group: \"Seefruits\",\n    subtext: \"fifth\",\n    children: [{\n      id: 6,\n      name: \"Salmon\"\n    }, {\n      id: 7,\n      name: \"Shrimps\"\n    }]\n  }]);\n\n  var modifiedIdIngredients = Ember['default'].A([{\n    code: 1,\n    name: \"Tomato\",\n    description: \"first\"\n  }, {\n    code: 2,\n    name: \"Peperoni\",\n    description: \"second\"\n  }, {\n    code: 3,\n    name: \"Ham\",\n    description: \"third\"\n  }, {\n    code: 4,\n    name: \"Chorizo\",\n    description: \"fourth\"\n  }]);\n\n  var App, component;\n  ember_qunit.moduleForComponent(\"select-2\", \"Select2Component (customize)\", {\n    setup: function setup() {\n      App = startApp['default']();\n      // setup and append component to dom\n      component = this.subject();\n    },\n    teardown: function teardown() {\n      Ember['default'].run(App, \"destroy\");\n      Ember['default'].run(component, \"destroy\");\n    }\n  });\n\n  ember_qunit.test(\"it uses optionLabelPath\", function (assert) {\n    assert.expect(2);\n\n    component.set(\"optionLabelPath\", \"name\");\n    component.set(\"content\", ingredients);\n\n    this.render();\n\n    click(\".select2-choice\");\n    click(\".select2-results li:nth-child(2)\", \"body\");\n\n    andThen(function () {\n      assert.strictEqual(component.get(\"value\"), ingredients[1], \"selects correct item\");\n      assert.equal($(\".select2-chosen\").text(), ingredients[1].name, \"has correct text\");\n    });\n  });\n\n  ember_qunit.test(\"it uses optionHeadlinePath\", function (assert) {\n    assert.expect(1);\n\n    component.set(\"optionHeadlinePath\", \"group\");\n    component.set(\"content\", ingredients);\n\n    this.render();\n\n    click(\".select2-choice\");\n\n    andThen(function () {\n      var headline = $(\".select2-results > li:last-child\").find(\".select2-result-label\").first().text();\n      var expected = ingredients[4].group;\n      assert.equal(headline, expected, \"has correct headline\");\n    });\n  });\n\n  ember_qunit.test(\"it uses optionDescriptionPath\", function (assert) {\n    assert.expect(1);\n\n    component.set(\"optionLabelPath\", \"name\");\n    component.set(\"optionDescriptionPath\", \"subtext\");\n    component.set(\"content\", ingredients);\n\n    this.render();\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n\n    andThen(function () {\n      var expected = ingredients.map(function (ingredient) {\n        // jQuery .text() will have space between name and subtext, but thats ok\n        return ingredient.children ? \"\" : ingredient.name + \" \" + ingredient.subtext;\n      }).join(\"\");\n      assert.equal($(\".select2-results > li:not(:last)\").text(), expected, \"display correct text\");\n    });\n  });\n\n  ember_qunit.test(\"it uses optionIdPath\", function (assert) {\n    assert.expect(1);\n\n    component.setProperties({\n      optionIdPath: \"code\",\n      content: modifiedIdIngredients\n    });\n\n    this.render();\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n    // then select an option\n    click(\".select2-results li:nth-child(1)\", \"body\");\n\n    andThen(function () {\n      assert.strictEqual(component.get(\"value\"), modifiedIdIngredients[0], \"selects correct item\");\n    });\n  });\n\n  ember_qunit.test(\"it uses custom `cssClass` for container\", function (assert) {\n    assert.expect(1);\n\n    component.set(\"cssClass\", \"customClass\");\n\n    this.render();\n\n    assert.ok($(\".select2-container\").hasClass(\"customClass\"), \"has class\");\n  });\n\n  ember_qunit.test(\"it uses custom `cssClass` for dropdown\", function (assert) {\n    assert.expect(1);\n\n    component.set(\"cssClass\", \"customClass\");\n    component.set(\"content\", ingredients);\n\n    this.render();\n\n    click(\".select2-choice\");\n\n    andThen(function () {\n      assert.ok($(\".select2-drop\").hasClass(\"customClass\"), \"has class\");\n    });\n  });\n\n  ember_qunit.test(\"disable search hides search field in single slection mode\", function (assert) {\n    assert.expect(1);\n\n    component.setProperties({\n      searchEnabled: false,\n      content: ingredients\n    });\n\n    this.render();\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n\n    andThen(function () {\n      assert.equal($(\"select2-search input\").length, 0, \"no input field\");\n    });\n  });\n\n  ember_qunit.test(\"disable search throws exception in multiple selection mode\", function (assert) {\n    assert.expect(1);\n\n    component.setProperties({\n      searchEnabled: false,\n      multiple: true\n    });\n\n    try {\n      this.render();\n    } catch (e) {\n      assert.ok(e, \"threw exception\");\n    }\n  });\n\n  ember_qunit.test(\"uses tabindex\", function (assert) {\n    assert.expect(1);\n\n    component.setProperties({\n      tabindex: -1,\n      content: ingredients\n    });\n\n    this.render();\n\n    assert.equal(find(\".select2-focusser\").attr(\"tabindex\"), \"-1\", \"tabindex matches\");\n  });\n\n  ember_qunit.test(\"uses `valueSeparator`\", function (assert) {\n    assert.expect(2);\n\n    component.setProperties({\n      content: [{\n        id: \"first\",\n        text: \"First\" }, {\n        id: \"second\",\n        text: \"Second\" }, {\n        id: \"thi,rd\",\n        text: \"Third\"\n      }],\n      multiple: true,\n      optionValuePath: \"id\",\n      valueSeparator: \"|\"\n    });\n\n    this.render();\n\n    // open options by clicking on the element\n    click(\".select2-choices\");\n    // then select an option\n    click(\".select2-results li:nth-child(1)\", \"body\");\n\n    // open options by clicking on the element\n    click(\".select2-choices\");\n    // and select another option\n    click(\".select2-results li:nth-child(2)\", \"body\");\n\n    andThen(function () {\n      assert.equal(component._select.val(), \"first|second\", \"outputs correct raw value string\");\n\n      component.set(\"value\", \"second|thi,rd\");\n\n      assert.equal(component.get(\"_hasSelectedMissingItems\"), false, \"accepts value string with custom separator\");\n    });\n  });\n\n  ember_qunit.test(\"uses `optionLabelSelectedPath`\", function (assert) {\n    assert.expect(1);\n\n    component.setProperties({\n      content: [{\n        id: \"first\",\n        text: \"First\",\n        selectedText: \"selectedFirst\"\n      }, {\n        id: \"second\",\n        text: \"Second\",\n        selectedText: \"selectedSecond\"\n      }],\n      optionValuePath: \"id\",\n      optionLabelSelectedPath: \"selectedText\"\n    });\n\n    this.render();\n\n    component.set(\"value\", \"first\");\n\n    assert.equal(find(\".select2-choice\").text().trim(), \"selectedFirst\", \"has correct selected text\");\n  });\n\n});","define('dummy/tests/unit/components/select-2-customize-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/select-2-customize-test.js should pass jshint', function() { \n    ok(true, 'unit/components/select-2-customize-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/select-2-ember-data-test', ['ember', 'ember-data', 'ember-qunit', 'dummy/tests/helpers/start-app'], function (Ember, DS, ember_qunit, startApp) {\n\n  'use strict';\n\n  /*\n    Test usage with Ember Data ArrayProxy and PromiseArray\n   */\n\n  var simpleContent = Ember['default'].A([{\n    id: true,\n    text: \"Margherita\"\n  }, {\n    id: \"pep\",\n    text: \"Peperoni\"\n  }, {\n    id: 42,\n    text: \"Ham\"\n  }, {\n    id: \"haw\",\n    text: \"Hawaii\"\n  }]);\n\n  var App, component;\n  ember_qunit.moduleForComponent(\"select-2\", \"Select2Component (ember-data)\", {\n    setup: function setup() {\n      App = startApp['default']();\n      // setup and append component to dom\n      component = this.subject();\n    },\n    teardown: function teardown() {\n      Ember['default'].run(App, \"destroy\");\n      Ember['default'].run(component, \"destroy\");\n    }\n  });\n\n  ember_qunit.test(\"it displays items from DS.RecordArray\", function (assert) {\n    assert.expect(4);\n\n    this.render();\n\n    // warp content in DS.RecordArray\n    var simpleContentRecordArray = DS['default'].RecordArray.create({\n      content: simpleContent\n    });\n\n    component.set(\"content\", simpleContentRecordArray);\n    component.set(\"optionValuePath\", \"id\");\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n    // then select an option\n    click(\".select2-results li:nth-child(3)\", \"body\");\n\n    andThen(function () {\n      assert.strictEqual(component.get(\"value\"), simpleContent[2].id, \"selects correct item\");\n      assert.equal($(\".select2-chosen\").text(), simpleContent[2].text, \"has correct text\");\n\n      // select another option just to make sure\n      click(\".select2-choice\");\n      click(\".select2-results li:nth-child(1)\", \"body\");\n\n      andThen(function () {\n        assert.strictEqual(component.get(\"value\"), simpleContent[0].id, \"selects correct item\");\n        assert.equal($(\".select2-chosen\").text(), simpleContent[0].text, \"has correct text\");\n      });\n    });\n  });\n\n  ember_qunit.test(\"it displays items from DS.PromiseArray\", function (assert) {\n    assert.expect(2);\n\n    this.render();\n\n    // warp content in DS.RecordArray\n    var simpleContentPromiseArray = DS['default'].PromiseArray.create({\n      promise: Ember['default'].RSVP.resolve(simpleContent)\n    });\n\n    component.set(\"content\", simpleContentPromiseArray);\n\n    // wait until Promise is resolved\n    simpleContentPromiseArray.then(function () {\n      // open options by clicking on the element\n      click(\".select2-choice\");\n\n      andThen(function () {\n        assert.equal($(\".select2-results li\").length, simpleContent.length, \"has correct options length\");\n        assert.equal($(\".select2-results li\").text(), simpleContent.getEach(\"text\").join(\"\"), \"display correct text\");\n      });\n    });\n  });\n\n  ember_qunit.test(\"it is disabled until content promise is resolved\", function (assert) {\n    assert.expect(2);\n\n    var deferred = Ember['default'].RSVP.defer();\n\n    // warp content in DS.RecordArray\n    var simpleContentPromiseArray = DS['default'].PromiseArray.create({\n      promise: deferred.promise\n    });\n\n    component.set(\"content\", simpleContentPromiseArray);\n\n    this.render();\n\n    assert.ok($(\".select2-container\").hasClass(\"select2-container-disabled\"), \"is disabled\");\n\n    deferred.resolve(simpleContent);\n\n    // wait until Promise is resolved\n    simpleContentPromiseArray.then(function () {\n      assert.ok(!$(\".select2-container\").hasClass(\"select2-container-disabled\"), \"is enabled\");\n    });\n  });\n\n  ember_qunit.test(\"it stays disabled after content promise is rejected\", function (assert) {\n    assert.expect(2);\n\n    var deferred = Ember['default'].RSVP.defer(),\n        errorText = \"some error description\";\n\n    // warp content in DS.RecordArray\n    var simpleContentPromiseArray = DS['default'].PromiseArray.create({\n      promise: deferred.promise\n    });\n\n    component.set(\"content\", simpleContentPromiseArray);\n\n    this.render();\n\n    assert.ok($(\".select2-container\").hasClass(\"select2-container-disabled\"), \"is disabled\");\n\n    deferred.reject(new Error(errorText));\n\n    // wait until Promise is rejected\n    simpleContentPromiseArray.then(null, function () {\n      assert.ok($(\".select2-container\").hasClass(\"select2-container-disabled\"), \"is disabled\");\n    });\n  });\n\n  ember_qunit.test(\"it is disabled until value promise is resolved\", function (assert) {\n    assert.expect(2);\n\n    var deferred = Ember['default'].RSVP.defer();\n\n    var simpleValuePromiseProxy = DS['default'].PromiseObject.create({\n      promise: deferred.promise\n    });\n\n    component.set(\"value\", simpleValuePromiseProxy);\n\n    this.render();\n\n    assert.ok($(\".select2-container\").hasClass(\"select2-container-disabled\"), \"is disabled\");\n\n    deferred.resolve(simpleContent[0]);\n\n    // wait until Promise is resolved\n    simpleValuePromiseProxy.then(function () {\n      assert.ok(!$(\".select2-container\").hasClass(\"select2-container-disabled\"), \"is enabled\");\n    });\n  });\n\n  ember_qunit.test(\"it stays disabled after value promise is rejected\", function (assert) {\n    assert.expect(2);\n\n    var deferred = Ember['default'].RSVP.defer(),\n        errorText = \"some error description\";\n\n    var simpleValuePromiseProxy = DS['default'].PromiseObject.create({\n      promise: deferred.promise\n    });\n\n    component.set(\"value\", simpleValuePromiseProxy);\n\n    this.render();\n\n    assert.ok($(\".select2-container\").hasClass(\"select2-container-disabled\"), \"is disabled\");\n\n    deferred.reject(new Error(errorText));\n\n    // wait until Promise is rejected\n    simpleValuePromiseProxy.then(null, function () {\n      assert.ok($(\".select2-container\").hasClass(\"select2-container-disabled\"), \"is disabled\");\n    });\n  });\n\n  ember_qunit.test(\"it clears selection when value promise resolves to null\", function (assert) {\n    assert.expect(2);\n\n    var deferred = Ember['default'].RSVP.defer(),\n        placeholder = \"placeholder\";\n\n    var simpleValuePromiseProxy = DS['default'].PromiseObject.create({\n      promise: deferred.promise\n    });\n\n    component.setProperties({\n      value: simpleValuePromiseProxy,\n      placeholder: placeholder,\n      allowClear: true\n    });\n\n    this.render();\n\n    assert.ok($(\".select2-container\").hasClass(\"select2-container-disabled\"), \"is disabled\");\n\n    deferred.resolve(null);\n\n    // wait until Promise is resolved\n    simpleValuePromiseProxy.then(function () {\n      assert.equal($(\".select2-chosen\").text(), placeholder, \"has placeholder text\");\n    });\n  });\n\n});","define('dummy/tests/unit/components/select-2-ember-data-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/select-2-ember-data-test.js should pass jshint', function() { \n    ok(true, 'unit/components/select-2-ember-data-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/select-2-enabled-option-test', ['ember', 'ember-qunit', 'dummy/tests/helpers/start-app'], function (Ember, ember_qunit, startApp) {\n\n  'use strict';\n\n  /*\n    Test the `enabled=true/false` binding\n   */\n\n  var App, component;\n  ember_qunit.moduleForComponent(\"select-2\", \"Select2Component (enabled-option)\", {\n    setup: function setup() {\n      App = startApp['default']();\n      // setup and append component to dom\n      component = this.subject();\n    },\n    teardown: function teardown() {\n      Ember['default'].run(App, \"destroy\");\n      Ember['default'].run(component, \"destroy\");\n    }\n  });\n\n  ember_qunit.test(\"it is disabled when `enabled=false` on creation\", function (assert) {\n    assert.expect(1);\n\n    component.set(\"enabled\", false);\n\n    this.render();\n\n    assert.ok($(\".select2-container\").hasClass(\"select2-container-disabled\"), \"is disabled\");\n  });\n\n  ember_qunit.test(\"it is disabled when `enabled=false`\", function (assert) {\n    assert.expect(3);\n\n    this.render();\n\n    assert.ok(!$(\".select2-container\").hasClass(\"select2-container-disabled\"), \"is enabled\");\n\n    component.set(\"enabled\", false);\n\n    assert.ok($(\".select2-container\").hasClass(\"select2-container-disabled\"), \"is disabled\");\n\n    component.set(\"enabled\", true);\n\n    assert.ok(!$(\".select2-container\").hasClass(\"select2-container-disabled\"), \"is enabled\");\n  });\n\n  ember_qunit.test(\"it stays disabled when `enabled=true` but has selected missing values\", function (assert) {\n    assert.expect(2);\n\n    this.render();\n\n    assert.ok(!$(\".select2-container\").hasClass(\"select2-container-disabled\"), \"is enabled\");\n\n    component.setProperties({\n      optionValuePath: \"id\",\n      content: [],\n      value: [\"missingObject\"]\n    });\n\n    assert.ok($(\".select2-container\").hasClass(\"select2-container-disabled\"), \"is disabled\");\n  });\n\n});","define('dummy/tests/unit/components/select-2-enabled-option-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/select-2-enabled-option-test.js should pass jshint', function() { \n    ok(true, 'unit/components/select-2-enabled-option-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/select-2-nested-content-test', ['ember', 'ember-qunit', 'dummy/tests/helpers/start-app'], function (Ember, ember_qunit, startApp) {\n\n  'use strict';\n\n  /*\n    Test basic functionality with nested input for `content`\n   */\n\n  var categorizedIngredients = Ember['default'].A([{\n    text: \"Vegetables\",\n    children: [{\n      id: \"tom\",\n      text: \"Tomatoes\"\n    }, {\n      id: \"pin\",\n      text: \"Pineapples\"\n    }]\n  }, {\n    text: \"Meat\",\n    children: [{\n      id: \"sal\",\n      text: \"Salami\"\n    }, {\n      id: \"ham\",\n      text: \"Ham\"\n    }, {\n      id: \"bac\",\n      text: \"Bacon\"\n    }]\n  }]);\n\n  var App, component;\n  ember_qunit.moduleForComponent(\"select-2\", \"Select2Component (nested-content)\", {\n    setup: function setup() {\n      App = startApp['default']();\n      // setup and append component to dom\n      component = this.subject();\n    },\n    teardown: function teardown() {\n      Ember['default'].run(App, \"destroy\");\n      Ember['default'].run(component, \"destroy\");\n    }\n  });\n\n  ember_qunit.test(\"it sets value to selected object in single selection mode\", function (assert) {\n    assert.expect(4);\n\n    this.render();\n\n    component.set(\"content\", categorizedIngredients);\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n    // then select a nested option\n    click(\".select2-results li:nth-child(2) ul li:nth-child(3)\", \"body\");\n\n    andThen(function () {\n      assert.strictEqual(component.get(\"value\"), categorizedIngredients[1].children[2], \"selects correct item\");\n      assert.equal($(\".select2-chosen\").text(), categorizedIngredients[1].children[2].text, \"has correct text\");\n\n      // select another option just to make sure\n      click(\".select2-choice\");\n      click(\".select2-results li:nth-child(1) ul li:nth-child(1)\", \"body\");\n\n      andThen(function () {\n        assert.strictEqual(component.get(\"value\"), categorizedIngredients[0].children[0], \"selects correct item\");\n        assert.equal($(\".select2-chosen\").text(), categorizedIngredients[0].children[0].text, \"has correct text\");\n      });\n    });\n  });\n\n  ember_qunit.test(\"it sets value to selected object's optionValuePath in single selection mode\", function (assert) {\n    assert.expect(4);\n\n    this.render();\n\n    component.set(\"content\", categorizedIngredients);\n    component.set(\"optionValuePath\", \"id\");\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n    // then select a nested option\n    click(\".select2-results li:nth-child(2) ul li:nth-child(3)\", \"body\");\n\n    andThen(function () {\n      assert.strictEqual(component.get(\"value\"), categorizedIngredients[1].children[2].id, \"selects correct item\");\n      assert.equal($(\".select2-chosen\").text(), categorizedIngredients[1].children[2].text, \"has correct text\");\n\n      // select another option just to make sure\n      click(\".select2-choice\");\n      click(\".select2-results li:nth-child(1) ul li:nth-child(1)\", \"body\");\n\n      andThen(function () {\n        assert.strictEqual(component.get(\"value\"), categorizedIngredients[0].children[0].id, \"selects correct item\");\n        assert.equal($(\".select2-chosen\").text(), categorizedIngredients[0].children[0].text, \"has correct text\");\n      });\n    });\n  });\n\n  ember_qunit.test(\"it sets value to array of selected objects in multiple selection mode\", function (assert) {\n    assert.expect(7);\n\n    component.set(\"multiple\", true);\n\n    this.render();\n\n    component.set(\"content\", categorizedIngredients);\n\n    assert.equal($(\".select2-choices\").text().trim(), \"\", \"has empty selection text on start\");\n\n    // select an option after opening the dropdown\n    click(\".select2-choices\");\n    click(\".select2-results li:nth-child(2) ul li:nth-child(3)\", \"body\");\n\n    andThen(function () {\n      assert.deepEqual(component.get(\"value\"), [categorizedIngredients[1].children[2]], \"has correct value\");\n      assert.equal($(\".select2-choices\").text().replace(/ /g, \"\"), categorizedIngredients[1].children[2].text, \"displays correct text\");\n\n      // select another item\n      click(\".select2-choices\");\n      click(\".select2-results li:nth-child(1) ul li:nth-child(1)\", \"body\");\n\n      andThen(function () {\n        assert.deepEqual(component.get(\"value\"), [categorizedIngredients[1].children[2], categorizedIngredients[0].children[0]], \"has correct value\");\n        assert.equal($(\".select2-choices\").text().replace(/ /g, \"\"), categorizedIngredients[1].children[2].text + categorizedIngredients[0].children[0].text, \"displays correct text\");\n\n        // remove the first item again\n        click(\".select2-search-choice:nth-child(1) .select2-search-choice-close\");\n\n        andThen(function () {\n          assert.deepEqual(component.get(\"value\"), [categorizedIngredients[0].children[0]], \"has correct value\");\n          assert.equal($(\".select2-choices\").text().replace(/ /g, \"\"), categorizedIngredients[0].children[0].text, \"displays correct text\");\n        });\n      });\n    });\n  });\n\n  ember_qunit.test(\"it sets value to array of selected objects' optionValuePaths in multiple selection mode\", function (assert) {\n    assert.expect(7);\n\n    component.set(\"multiple\", true);\n\n    this.render();\n\n    component.set(\"content\", categorizedIngredients);\n    component.set(\"optionValuePath\", \"id\");\n\n    assert.equal($(\".select2-choices\").text().trim(), \"\", \"has empty selection text on start\");\n\n    // select an option after opening the dropdown\n    click(\".select2-choices\");\n    click(\".select2-results li:nth-child(2) ul li:nth-child(3)\", \"body\");\n\n    andThen(function () {\n      assert.deepEqual(component.get(\"value\"), [categorizedIngredients[1].children[2].id], \"has correct value\");\n      assert.equal($(\".select2-choices\").text().replace(/ /g, \"\"), categorizedIngredients[1].children[2].text, \"displays correct text\");\n\n      // select another item\n      click(\".select2-choices\");\n      click(\".select2-results li:nth-child(1) ul li:nth-child(1)\", \"body\");\n\n      andThen(function () {\n        assert.deepEqual(component.get(\"value\"), [categorizedIngredients[1].children[2].id, categorizedIngredients[0].children[0].id], \"has correct value\");\n        assert.equal($(\".select2-choices\").text().replace(/ /g, \"\"), categorizedIngredients[1].children[2].text + categorizedIngredients[0].children[0].text, \"displays correct text\");\n\n        // remove the first item again\n        click(\".select2-search-choice:nth-child(1) .select2-search-choice-close\");\n\n        andThen(function () {\n          assert.deepEqual(component.get(\"value\"), [categorizedIngredients[0].children[0].id], \"has correct value\");\n          assert.equal($(\".select2-choices\").text().replace(/ /g, \"\"), categorizedIngredients[0].children[0].text, \"displays correct text\");\n        });\n      });\n    });\n  });\n\n});","define('dummy/tests/unit/components/select-2-nested-content-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/select-2-nested-content-test.js should pass jshint', function() { \n    ok(true, 'unit/components/select-2-nested-content-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/select-2-test', ['ember', 'ember-qunit', 'dummy/tests/helpers/start-app'], function (Ember, ember_qunit, startApp) {\n\n  'use strict';\n\n  /*\n    Test basic functionality like selection in various modes\n   */\n\n  var simpleContent = Ember['default'].A([{\n    id: true,\n    text: \"Margherita\"\n  }, {\n    id: \"pep\",\n    text: \"Peperoni\"\n  }, {\n    id: 42,\n    text: \"Ham\"\n  }, {\n    id: \"haw\",\n    text: \"Hawaii\"\n  }, {\n    id: \"lame\",\n    disabled: true,\n    text: \"Plain Cheese\"\n  }]);\n  var additionalContent = Ember['default'].A([{\n    id: \"cal\",\n    text: \"Calzone\"\n  }, {\n    id: \"bbq\",\n    text: \"Barbecue\"\n  }]);\n\n  var App, component;\n  ember_qunit.moduleForComponent(\"select-2\", \"Select2Component\", {\n    setup: function setup() {\n      App = startApp['default']();\n      // setup and append component to dom\n      component = this.subject();\n    },\n    teardown: function teardown() {\n      Ember['default'].run(App, \"destroy\");\n      Ember['default'].run(component, \"destroy\");\n    }\n  });\n\n  ember_qunit.test(\"it renders\", function (assert) {\n    assert.expect(2);\n\n    assert.equal(component._state, \"preRender\");\n\n    // appends the component to the page\n    this.render();\n    assert.equal(component._state, \"inDOM\");\n  });\n\n  ember_qunit.test(\"it initializes select2 plugin\", function (assert) {\n    assert.expect(2);\n\n    // append the component to the DOM\n    this.render();\n\n    assert.ok(component.$().data(\"select2\"), \"has select2 data attribute\");\n\n    assert.ok($(\".select2-container\").length, \"inserts container into dom\");\n  });\n\n  ember_qunit.test(\"it supports placeholder text\", function (assert) {\n    var placeholder = \"unit testing rocks\";\n\n    component.set(\"placeholder\", placeholder);\n\n    this.render();\n\n    assert.equal($(\".select2-chosen\").text(), placeholder, \"has placeholder text\");\n  });\n\n  ember_qunit.test(\"it shows options when opened\", function (assert) {\n    assert.expect(2);\n\n    this.render();\n\n    component.set(\"content\", simpleContent);\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n\n    andThen(function () {\n      assert.equal($(\".select2-results li\").length, simpleContent.length, \"has correct options length\");\n      assert.equal($(\".select2-results li\").text(), simpleContent.getEach(\"text\").join(\"\"), \"display correct text\");\n    });\n  });\n\n  ember_qunit.test(\"it sets value to selected object in single selection mode\", function (assert) {\n    assert.expect(4);\n\n    this.render();\n\n    component.set(\"content\", simpleContent);\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n    // then select an option\n    click(\".select2-results li:nth-child(3)\", \"body\");\n\n    andThen(function () {\n      assert.strictEqual(component.get(\"value\"), simpleContent[2], \"selects correct item\");\n      assert.equal($(\".select2-chosen\").text(), simpleContent[2].text, \"has correct text\");\n\n      // select another option just to make sure\n      click(\".select2-choice\");\n      click(\".select2-results li:nth-child(1)\", \"body\");\n\n      andThen(function () {\n        assert.strictEqual(component.get(\"value\"), simpleContent[0], \"selects correct item\");\n        assert.equal($(\".select2-chosen\").text(), simpleContent[0].text, \"has correct text\");\n      });\n    });\n  });\n\n  ember_qunit.test(\"it sends `didSelect` action once when selection has been changed\", function (assert) {\n    assert.expect(1);\n\n    var controller = {\n      selectionChanged: function selectionChanged() {}\n    };\n    var spy = sinon.spy(controller, \"selectionChanged\");\n\n    component.setProperties({\n      targetObject: controller,\n      content: simpleContent,\n      didSelect: \"selectionChanged\"\n    });\n\n    this.render();\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n    // then select an option\n    click(\".select2-results li:nth-child(3)\", \"body\");\n\n    andThen(function () {\n      assert.ok(spy.calledOnce, \"callback after selection changed has been executed\");\n    });\n  });\n\n  /*\n    This test assures, that when sending the `didSelect` action, bindings have\n    already been synced. Test for PR #75\n   */\n  ember_qunit.test(\"component has correct value before `didSelect` fires\", function (assert) {\n    assert.expect(1);\n\n    var controller = Ember['default'].Object.create({\n      component: component,\n      valueBinding: \"component.value\",\n      selectionChanged: function selectionChanged() {\n        assert.strictEqual(this.get(\"value\"), simpleContent[2], \"selects correct item\");\n      }\n    });\n\n    component.setProperties({\n      targetObject: controller,\n      content: simpleContent,\n      didSelect: \"selectionChanged\"\n    });\n\n    this.render();\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n    // then select an option\n    click(\".select2-results li:nth-child(3)\", \"body\");\n  });\n\n  ember_qunit.test(\"it sends `didSelect` action having the new value as the first argument\", function (assert) {\n    assert.expect(2);\n\n    var controller = {\n      selectionChanged: function selectionChanged() {}\n    };\n    var spy = sinon.spy(controller, \"selectionChanged\");\n\n    component.setProperties({\n      targetObject: controller,\n      content: simpleContent,\n      didSelect: \"selectionChanged\"\n    });\n\n    this.render();\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n    // then select an option\n    click(\".select2-results li:nth-child(3)\", \"body\");\n\n    andThen(function () {\n      assert.ok(spy.calledOnce, \"callback after selection changed has been executed\");\n      assert.ok(spy.calledWith(simpleContent[2]), \"has new value as argument\");\n    });\n  });\n\n  ember_qunit.test(\"it sends `didSelect` action having a reference to itself as the second argument\", function (assert) {\n    assert.expect(2);\n\n    var controller = {\n      selectionChanged: function selectionChanged() {}\n    };\n    var spy = sinon.spy(controller, \"selectionChanged\");\n\n    component.setProperties({\n      targetObject: controller,\n      content: simpleContent,\n      didSelect: \"selectionChanged\"\n    });\n\n    this.render();\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n    // then select an option\n    click(\".select2-results li:nth-child(3)\", \"body\");\n\n    andThen(function () {\n      assert.ok(spy.calledOnce, \"callback after selection changed has been executed\");\n      assert.ok(spy.calledWith(simpleContent[2], component), \"has reference to self as argument\");\n    });\n  });\n\n  ember_qunit.test(\"it supports the allowClear option\", function (assert) {\n    assert.expect(3);\n\n    component.set(\"placeholder\", \"Select a value\"); // placeholder is required for allowClear\n    component.set(\"allowClear\", true);\n\n    this.render();\n\n    component.set(\"content\", simpleContent);\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n    // then select an option\n    click(\".select2-results li:nth-child(3)\", \"body\");\n\n    andThen(function () {\n      assert.strictEqual(component.get(\"value\"), simpleContent[2], \"selects correct item\");\n      assert.equal($(\".select2-chosen\").text(), simpleContent[2].text, \"has correct text\");\n\n      // Click the remove option x\n      click(\".select2-search-choice-close:visible\");\n\n      andThen(function () {\n        assert.strictEqual(component.get(\"value\"), null, \"unselects the selected item\");\n      });\n    });\n  });\n\n  ember_qunit.test(\"it alerts if allowClear is set without a placeholder\", function (assert) {\n    assert.expect(1);\n\n    component.set(\"placeholder\", undefined);\n    component.set(\"allowClear\", true);\n\n    try {\n      this.render();\n    } catch (e) {\n      assert.equal(e.message, \"Assertion Failed: To use allowClear, you have to specify a placeholder\", \"throws and error\");\n    }\n  });\n\n  ember_qunit.test(\"it sets value to selected object's optionValuePath in single selection mode\", function (assert) {\n    assert.expect(4);\n\n    this.render();\n\n    component.set(\"content\", simpleContent);\n    component.set(\"optionValuePath\", \"id\");\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n    // then select an option\n    click(\".select2-results li:nth-child(3)\", \"body\");\n\n    andThen(function () {\n      assert.strictEqual(component.get(\"value\"), simpleContent[2].id, \"selects correct item\");\n      assert.equal($(\".select2-chosen\").text(), simpleContent[2].text, \"has correct text\");\n\n      // select another option just to make sure\n      click(\".select2-choice\");\n      click(\".select2-results li:nth-child(1)\", \"body\");\n\n      andThen(function () {\n        assert.strictEqual(component.get(\"value\"), simpleContent[0].id, \"selects correct item\");\n        assert.equal($(\".select2-chosen\").text(), simpleContent[0].text, \"has correct text\");\n      });\n    });\n  });\n\n  ember_qunit.test(\"it allows individual options to be disabled\", function (assert) {\n    assert.expect(3);\n\n    this.render();\n\n    component.set(\"content\", simpleContent);\n    component.set(\"optionValuePath\", \"id\");\n\n    //select an enabled option\n    click(\".select2-choice\");\n    click(\".select2-results li:nth-child(2)\", \"body\");\n\n    //click disabled option\n    click(\".select2-choice\");\n    click(\".select2-results li:nth-child(5)\", \"body\");\n\n    andThen(function () {\n      //selection should remain unchanged\n      assert.strictEqual(component.get(\"value\"), simpleContent[1].id, \"selection remains unchanged\");\n      assert.equal($(\".select2-chosen\").text(), simpleContent[1].text, \"remains unchanged\");\n\n      //should have disabled styling\n      assert.equal($(\".select2-results li:nth-child(5)\").hasClass(\"select2-disabled\"), true, \"has disabled class\");\n    });\n  });\n\n  ember_qunit.test(\"it reacts to external value change\", function (assert) {\n    assert.expect(2);\n\n    this.render();\n\n    component.set(\"content\", simpleContent);\n\n    assert.equal($(\".select2-chosen\").text(), \"\", \"has empty selection text on start\");\n\n    component.set(\"value\", simpleContent[1]);\n\n    assert.equal($(\".select2-chosen\").text(), simpleContent[1].text, \"has correct selection text after value change\");\n  });\n\n  ember_qunit.test(\"it reacts to external value change with optionValuePath\", function (assert) {\n    assert.expect(2);\n\n    this.render();\n\n    component.set(\"content\", simpleContent);\n    component.set(\"optionValuePath\", \"id\");\n\n    assert.equal($(\".select2-chosen\").text(), \"\", \"has empty selection text on start\");\n\n    component.set(\"value\", simpleContent[1].id);\n\n    assert.equal($(\".select2-chosen\").text(), simpleContent[1].text, \"has correct selection text after value change\");\n  });\n\n  ember_qunit.test(\"it sets value to array of selected objects in multiple selection mode\", function (assert) {\n    assert.expect(7);\n\n    component.set(\"multiple\", true);\n\n    this.render();\n\n    component.set(\"content\", simpleContent);\n\n    assert.equal($(\".select2-choices\").text().trim(), \"\", \"has empty selection text on start\");\n\n    // select an option after opening the dropdown\n    click(\".select2-choices\");\n    click(\".select2-results li:nth-child(3)\", \"body\");\n\n    andThen(function () {\n      assert.deepEqual(component.get(\"value\"), [simpleContent[2]], \"has correct value\");\n      assert.equal($(\".select2-choices\").text().replace(/ /g, \"\"), simpleContent[2].text, \"displays correct text\");\n\n      // select another item\n      click(\".select2-choices\");\n      click(\".select2-results li:nth-child(1)\", \"body\");\n\n      andThen(function () {\n        assert.deepEqual(component.get(\"value\"), [simpleContent[2], simpleContent[0]], \"has correct value\");\n        assert.equal($(\".select2-choices\").text().replace(/ /g, \"\"), simpleContent[2].text + simpleContent[0].text, \"displays correct text\");\n\n        // remove the first item again\n        click(\".select2-search-choice:nth-child(1) .select2-search-choice-close\");\n\n        andThen(function () {\n          assert.deepEqual(component.get(\"value\"), [simpleContent[0]], \"has correct value\");\n          assert.equal($(\".select2-choices\").text().replace(/ /g, \"\"), simpleContent[0].text, \"displays correct text\");\n        });\n      });\n    });\n  });\n\n  ember_qunit.test(\"it sets value to array of selected objects' optionValuePaths in multiple selection mode\", function (assert) {\n    assert.expect(7);\n\n    component.set(\"multiple\", true);\n\n    this.render();\n\n    component.set(\"content\", simpleContent);\n    component.set(\"optionValuePath\", \"id\");\n\n    assert.equal($(\".select2-choices\").text().trim(), \"\", \"has empty selection text on start\");\n\n    // select an option after opening the dropdown\n    click(\".select2-choices\");\n    click(\".select2-results li:nth-child(3)\", \"body\");\n\n    andThen(function () {\n      assert.deepEqual(component.get(\"value\"), [simpleContent[2].id], \"has correct value\");\n      assert.equal($(\".select2-choices\").text().replace(/ /g, \"\"), simpleContent[2].text, \"displays correct text\");\n\n      // select another item\n      click(\".select2-choices\");\n      click(\".select2-results li:nth-child(1)\", \"body\");\n\n      andThen(function () {\n        assert.deepEqual(component.get(\"value\"), [simpleContent[2].id, simpleContent[0].id], \"has correct value\");\n        assert.equal($(\".select2-choices\").text().replace(/ /g, \"\"), simpleContent[2].text + simpleContent[0].text, \"displays correct text\");\n\n        // remove the first item again\n        click(\".select2-search-choice:nth-child(1) .select2-search-choice-close\");\n\n        andThen(function () {\n          assert.deepEqual(component.get(\"value\"), [simpleContent[0].id], \"has correct value\");\n          assert.equal($(\".select2-choices\").text().replace(/ /g, \"\"), simpleContent[0].text, \"displays correct text\");\n        });\n      });\n    });\n  });\n\n  ember_qunit.test(\"it reacts to changing the content array\", function (assert) {\n    assert.expect(4);\n\n    this.render();\n\n    var content = Ember['default'].A();\n    content.pushObjects(simpleContent);\n\n    component.set(\"content\", content);\n\n    // select an option after opening the dropdown\n    click(\".select2-choice\");\n\n    andThen(function () {\n      assert.equal($(\".select2-results li\").length, simpleContent.length, \"has correct options length\");\n      assert.equal($(\".select2-results li\").text(), simpleContent.getEach(\"text\").join(\"\"), \"display correct text\");\n\n      click(\".select2-choice\");\n\n      content.pushObjects(additionalContent);\n\n      click(\".select2-choice\");\n\n      andThen(function () {\n        assert.equal($(\".select2-results li\").length, simpleContent.length + additionalContent.length, \"has correct options length\");\n        assert.equal($(\".select2-results li\").text(), simpleContent.getEach(\"text\").join(\"\") + additionalContent.getEach(\"text\").join(\"\"), \"display correct text\");\n      });\n    });\n  });\n\n  ember_qunit.test(\"it is disabled when its selection contains values not in the content array\", function (assert) {\n    assert.expect(2);\n\n    this.render();\n\n    var content = Ember['default'].A();\n    content.pushObjects(simpleContent);\n\n    component.set(\"content\", content);\n    component.set(\"multiple\", true);\n    component.set(\"optionValuePath\", \"id\");\n    component.set(\"value\", [\"bbq\"]);\n\n    assert.ok($(\".select2-container\").hasClass(\"select2-container-disabled\"), \"is disabled\");\n\n    content.pushObjects(additionalContent);\n\n    assert.ok(!$(\".select2-container\").hasClass(\"select2-container-disabled\"), \"is enabled\");\n  });\n\n  ember_qunit.test(\"Change event does not trigger an autorun\", function (assert) {\n    assert.expect(1);\n\n    this.render();\n    var content = Ember['default'].A();\n    content.pushObjects(simpleContent);\n    component.set(\"content\", content);\n    component.set(\"optionValuePath\", \"id\");\n\n    Ember['default'].addObserver(component, \"value\", function () {\n      Ember['default'].run.schedule(\"afterRender\", function () {\n        assert.ok(true);\n      });\n    });\n\n    component._select.val(42).trigger(\"change\");\n  });\n\n});","define('dummy/tests/unit/components/select-2-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/select-2-test.js should pass jshint', function() { \n    ok(true, 'unit/components/select-2-test.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/unit/components/select-2-typeahead-test', ['ember', 'ember-qunit', 'dummy/tests/helpers/start-app'], function (Ember, ember_qunit, startApp) {\n\n  'use strict';\n\n  /*\n    Test the typeahead feature enabled by setting the `query` binding\n\n    Also tests the customization options\n     * `typeaheadSearchingText`\n     * `typeaheadNoMatchesText` and escaping of the search term\n     * `typeaheadErrorText`\n   */\n\n  var simpleContent = Ember['default'].A([{\n    id: true,\n    text: \"Margherita\"\n  }, {\n    id: \"pep\",\n    text: \"Peperoni\"\n  }, {\n    id: 42,\n    text: \"Ham\"\n  }, {\n    id: \"haw\",\n    text: \"Hawaii\"\n  }]);\n\n  var firstContent = Ember['default'].A([{\n    id: true,\n    text: \"Margherita\"\n  }, {\n    id: \"pep\",\n    text: \"Peperoni\"\n  }, {\n    id: 42,\n    text: \"Ham\"\n  }, {\n    id: \"haw\",\n    text: \"Hawaii\"\n  }, {\n    id: \"choco\",\n    text: \"Chocolate\"\n  }, {\n    id: \"tomato\",\n    text: \"Tomato\"\n  }, {\n    id: 36,\n    text: \"Crust\"\n  }, {\n    id: 37,\n    text: \"Dominos\"\n  }]);\n\n  var moreContent = Ember['default'].A([{\n    id: \"pine\",\n    text: \"Pineapple\"\n  }, {\n    id: \"cheese\",\n    text: \"Cheese\"\n  }, {\n    id: 45,\n    text: \"Sausage\"\n  }, {\n    id: 46,\n    text: \"Mushroom\"\n  }]);\n\n  var App, component;\n  ember_qunit.moduleForComponent(\"select-2\", \"Select2Component (typeahead)\", {\n    setup: function setup() {\n      App = startApp['default']();\n      // setup and append component to dom\n      component = this.subject();\n    },\n    teardown: function teardown() {\n      Ember['default'].run(App, \"destroy\");\n      Ember['default'].run(component, \"destroy\");\n    }\n  });\n\n  ember_qunit.test(\"it send `query` action with query and deferred arguments\", function (assert) {\n    assert.expect(1);\n\n    var controller = {\n      queryOptions: function queryOptions(query, deferred) {\n        deferred.resolve(simpleContent);\n      }\n    };\n\n    var spy = sinon.spy(controller, \"queryOptions\");\n\n    component.setProperties({\n      targetObject: controller,\n      query: \"queryOptions\"\n    });\n\n    this.render();\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n\n    andThen(function () {\n      assert.ok(spy.calledWithMatch(sinon.match.has(\"term\", sinon.match.string), sinon.match.has(\"resolve\", sinon.match.func)), \"callback with query object with search string and deferred object that can be resolved\");\n    });\n  });\n\n  ember_qunit.test(\"it displays options from array\", function (assert) {\n    assert.expect(2);\n\n    var controller = {\n      queryOptions: function queryOptions(query, deferred) {\n        deferred.resolve(simpleContent);\n      }\n    };\n\n    component.setProperties({\n      targetObject: controller,\n      query: \"queryOptions\"\n    });\n\n    this.render();\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n\n    andThen(function () {\n      assert.equal($(\".select2-results li\").length, simpleContent.length, \"has correct options length\");\n      assert.equal($(\".select2-results li\").text(), simpleContent.getEach(\"text\").join(\"\"), \"display correct text\");\n    });\n  });\n\n  ember_qunit.test(\"it displays options from ArrayProxy\", function (assert) {\n    assert.expect(2);\n\n    var controller = {\n      queryOptions: function queryOptions(query, deferred) {\n        deferred.resolve(Ember['default'].ArrayProxy.create({ content: simpleContent }));\n      }\n    };\n\n    component.setProperties({\n      targetObject: controller,\n      query: \"queryOptions\"\n    });\n\n    this.render();\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n\n    andThen(function () {\n      assert.equal($(\".select2-results li\").length, simpleContent.length, \"has correct options length\");\n      assert.equal($(\".select2-results li\").text(), simpleContent.getEach(\"text\").join(\"\"), \"display correct text\");\n    });\n  });\n\n  ember_qunit.test(\"it displays options from array with loading more\", function (assert) {\n    assert.expect(4);\n\n    var alreadyLoadedOnce = false;\n    var loadingMoreText = \"Loading more results…\";\n\n    var controller = {\n      queryOptions: function queryOptions(query, deferred) {\n        if (alreadyLoadedOnce) {\n          deferred.resolve({ data: moreContent, more: false });\n        } else {\n          alreadyLoadedOnce = true;\n          deferred.resolve({ data: firstContent, more: true });\n        }\n      }\n    };\n\n    component.setProperties({\n      targetObject: controller,\n      query: \"queryOptions\"\n    });\n\n    this.render();\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n\n    andThen(function () {\n      assert.equal($(\".select2-results li\").length, firstContent.length + 1, \"has correct options length\");\n      assert.equal($(\".select2-results li\").text(), Ember['default'].A(firstContent).getEach(\"text\").join(\"\") + loadingMoreText, \"display correct text\");\n\n      //scroll to bottom, wait for scroll event to be regsitered, and expect a load more\n      $(\".select2-results\").scrollTop($(\".select2-results\")[0].scrollHeight);\n\n      Ember['default'].run.later(this, function () {\n        assert.equal($(\".select2-results li\").length, firstContent.length + moreContent.length, \"has correct options length after scroll\");\n        assert.equal($(\".select2-results li\").text(), Ember['default'].A(firstContent.concat(moreContent)).getEach(\"text\").join(\"\"), \"display correct text after scroll\");\n      }, 150);\n    });\n  });\n\n  ember_qunit.test(\"it displays options from ArrayProxy with loading more\", function (assert) {\n    assert.expect(4);\n\n    var alreadyLoadedOnce = false;\n    var loadingMoreText = \"Loading more results…\";\n\n    var controller = {\n      queryOptions: function queryOptions(query, deferred) {\n        if (alreadyLoadedOnce) {\n          deferred.resolve({ data: Ember['default'].ArrayProxy.create({ content: moreContent }), more: false });\n        } else {\n          alreadyLoadedOnce = true;\n          deferred.resolve({ data: Ember['default'].ArrayProxy.create({ content: firstContent }), more: true });\n        }\n      }\n    };\n\n    component.setProperties({\n      targetObject: controller,\n      query: \"queryOptions\"\n    });\n\n    this.render();\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n\n    andThen(function () {\n      assert.equal($(\".select2-results li\").length, firstContent.length + 1, \"has correct options length\");\n      assert.equal($(\".select2-results li\").text(), Ember['default'].A(firstContent).getEach(\"text\").join(\"\") + loadingMoreText, \"display correct text\");\n\n      //scroll to bottom, wait for scroll event to be regsitered, and expect a load more\n      $(\".select2-results\").scrollTop($(\".select2-results\")[0].scrollHeight);\n\n      Ember['default'].run.later(this, function () {\n        assert.equal($(\".select2-results li\").length, firstContent.length + moreContent.length, \"has correct options length after scroll\");\n        assert.equal($(\".select2-results li\").text(), Ember['default'].A(firstContent.concat(moreContent)).getEach(\"text\").join(\"\"), \"display correct text after scroll\");\n      }, 150);\n    });\n  });\n\n  ember_qunit.test(\"it displays default minimumInputLength text\", function (assert) {\n    assert.expect(1);\n\n    component.set(\"minimumInputLength\", 3);\n\n    this.render();\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n\n    andThen(function () {\n      assert.equal($(\"li.select2-no-results\").text(), \"Please enter 3 or more characters\", \"displays minimumInputLength text info\");\n    });\n  });\n\n  ember_qunit.test(\"it allows no inputs longer than maximumInputLength\", function (assert) {\n    assert.expect(1);\n\n    component.setProperties({\n      maximumInputLength: 10,\n      content: simpleContent\n    });\n\n    this.render();\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n\n    andThen(function () {\n      assert.equal(find(\".select2-input\", \"body\")[0].maxLength, 10, \"has 10 character limit\");\n    });\n  });\n\n  ember_qunit.test(\"it displays default searching text when waiting for results for first time\", function (assert) {\n    assert.expect(1);\n\n    var controller = {\n      queryOptions: function queryOptions(query, deferred) {}\n    };\n\n    component.setProperties({\n      targetObject: controller,\n      query: \"queryOptions\"\n    });\n\n    this.render();\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n\n    andThen(function () {\n      assert.equal($(\"li.select2-searching\").text(), \"Searching…\", \"displays searching text\");\n    });\n  });\n\n  ember_qunit.test(\"it displays custom `typeaheadSearchingText` when waiting for results for first time\", function (assert) {\n    assert.expect(1);\n\n    var controller = {\n      queryOptions: function queryOptions(query, deferred) {}\n    };\n\n    component.setProperties({\n      targetObject: controller,\n      typeaheadSearchingText: \"customSearch\",\n      query: \"queryOptions\"\n    });\n\n    this.render();\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n\n    andThen(function () {\n      assert.equal($(\"li.select2-searching\").text(), \"customSearch\", \"displays custom searching text\");\n    });\n  });\n\n  ember_qunit.test(\"it displays default no-matches message for empty response\", function (assert) {\n    assert.expect(1);\n\n    var controller = {\n      queryOptions: function queryOptions(query, deferred) {\n        deferred.resolve([]);\n      }\n    };\n\n    component.setProperties({\n      targetObject: controller,\n      query: \"queryOptions\"\n    });\n\n    this.render();\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n\n    andThen(function () {\n      assert.equal($(\"li.select2-no-results\").text(), \"No matches found\", \"display no results text\");\n    });\n  });\n\n  ember_qunit.test(\"it displays custom `typeaheadNoMatchesText` text\", function (assert) {\n    assert.expect(1);\n\n    var controller = {\n      queryOptions: function queryOptions(query, deferred) {\n        deferred.resolve([]);\n      }\n    };\n\n    component.setProperties({\n      targetObject: controller,\n      typeaheadNoMatchesText: \"No results for %@\",\n      query: \"queryOptions\"\n    });\n\n    this.render();\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n\n    fillIn(\".select2-input\", \"body\", \"bla\");\n\n    andThen(function () {\n      assert.equal($(\"li.select2-no-results\").text(), \"No results for \", \"display custom no results text\");\n    });\n  });\n\n  ember_qunit.test(\"it displays default error message for rejected promise\", function (assert) {\n    assert.expect(1);\n\n    var controller = {\n      queryOptions: function queryOptions(query, deferred) {\n        deferred.reject(\"Some message\");\n      }\n    };\n\n    component.setProperties({\n      targetObject: controller,\n      query: \"queryOptions\"\n    });\n\n    this.render();\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n\n    andThen(function () {\n      assert.equal($(\"li.select2-ajax-error\").text(), \"Loading failed\", \"displays error text\");\n    });\n  });\n\n  ember_qunit.test(\"it displays `typeaheadErrorText` for rejected promise\", function (assert) {\n    assert.expect(1);\n\n    var controller = {\n      queryOptions: function queryOptions(query, deferred) {\n        deferred.reject(\"Some message\");\n      }\n    };\n\n    component.setProperties({\n      targetObject: controller,\n      typeaheadErrorText: \"Loading Error: %@\",\n      query: \"queryOptions\"\n    });\n\n    this.render();\n\n    // open options by clicking on the element\n    click(\".select2-choice\");\n\n    andThen(function () {\n      assert.equal($(\"li.select2-ajax-error\").text(), \"Loading Error: Some message\", \"displays custom error text\");\n    });\n  });\n\n});","define('dummy/tests/unit/components/select-2-typeahead-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/select-2-typeahead-test.js should pass jshint', function() { \n    ok(true, 'unit/components/select-2-typeahead-test.js should pass jshint.'); \n  });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('dummy/config/environment', ['ember'], function(Ember) {\n  var prefix = 'dummy';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"dummy/tests/test-helper\");\n} else {\n  require(\"dummy/app\")[\"default\"].create({\"LOG_ACTIVE_GENERATION\":true,\"LOG_VIEW_LOOKUPS\":true,\"name\":\"ember-select-2\",\"version\":\"1.3.0.fee21281\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdpnerMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrxvjffile":"dummy.js"}